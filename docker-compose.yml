version: '3.8'

services:
  db:
    container_name: cafe_hopper_db
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 30

  backend:
    container_name: cafe_hopper_backend
    build: 
      context: ./typescript-backend
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_DATABASE_URL=${POSTGRES_DATABASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - '3001:8080'
    restart: always

  frontend:
    container_name: cafe_hopper_frontend
    build: 
      context: ./react-frontend
      dockerfile: Dockerfile
    env_file:
      - ./react-frontend/.env
    ports:
      - '3000:3000'
    depends_on:
      - backend
    restart: always

volumes:
  postgres_data:
